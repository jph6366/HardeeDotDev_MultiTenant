"""
Django settings for HardeeDotDev_MultiTenant project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

import Public_HardeeDotDev.apps

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-16wgi%vo8gb1)qd2nr+ta)0yzi*grm2$!6ca4$%o!k39kmt@w#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

# SHARED_APPS is a tuple of strings just like INSTALLED_APPS
# and should contain all apps that you want to be synced to public
SHARED_APPS = (
    'django_tenants',  # mandatory
    'Public_HardeeDotDev',  # you must list the app where your tenant model resides in

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

# TENANT_APPS, it expects a tuple of strings where each string is an app.
# If set, only those applications will be synced to all your tenants.
TENANT_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)

TENANT_MODEL = "Public_HardeeDotDev.Client"  # app.Model

TENANT_DOMAIN_MODEL = "Public_HardeeDotDev.Domain"  # app.Model

INSTALLED_APPS = list(SHARED_APPS) + [app for app in TENANT_APPS if app not in SHARED_APPS]


MIDDLEWARE = [
    # This middleware should be placed at the very top of the middleware stack.
    'django_tenants.middleware.main.TenantMainMiddleware',
    # Selects the proper database schema using the request host.
    # Can fail in various ways which is better than corrupting or revealing data.
    # https://github.com/django-tenants/django-tenants/blob/04164c2d38b03d3508ec109a39989d42b9262f96/django_tenants/middleware/main.py#L12

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HardeeDotDev_MultiTenant.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                # If this processor is enabled,
                # every RequestContext will contain these two variables
                # – but only if your DEBUG setting is set to True and
                # the request’s IP address (request.META['REMOTE_ADDR'])
                # is in the INTERNAL_IPS setting...
                #  https://docs.djangoproject.com/en/4.2/ref/templates/api/#django-template-context-processors-debug
                'django.template.context_processors.debug',

                # if this processor is enabled,
                # every RequestContext will contain a variable request,
                # which is the current HttpRequest.
                # https://docs.djangoproject.com/en/4.2/ref/templates/api/#django-template-context-processors-request
                'django.template.context_processors.request',

                # If this processor is enabled,
                # every RequestContext will contain these variables...
                # https://docs.djangoproject.com/en/4.2/ref/templates/api/#django-contrib-auth-context-processors-auth
                'django.contrib.auth.context_processors.auth',

                # If this processor is enabled,
                # every RequestContext will contain these two variables...
                # https://docs.djangoproject.com/en/4.2/ref/templates/api/#django-contrib-messages-context-processors-messages
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'HardeeDotDev_MultiTenant.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        # Django Tenants Database Wrapper for pgsql using psycopg and (django database & django-tenants) utils
        # https://github.com/django-tenants/django-tenants/blob/master/django_tenants/postgresql_backend/base.py
        'ENGINE': 'django_tenants.postgresql_backend',
        'USER': "postgres",
        'NAME': 'postgres',
        'PASSWORD': "kipper",
        "HOST": "localhost",
        "PORT": "5432",
    }
}

# A router to control which applications will be synced,
# depending if we are syncing the shared apps or the tenant apps.

DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
